--// Unskippable CoreGui Loading Screen with Player Avatar & Username (1000s duration)
local CoreGui = game:GetService("CoreGui")
local Players = game:GetService("Players")
local TweenService = game:GetService("TweenService")

local player = Players.LocalPlayer or Players.PlayerAdded:Wait()
local userId = player.UserId
local username = player.DisplayName or player.Name
local avatarUrl = string.format("https://www.roblox.com/headshot-thumbnail/image?userId=%d&width=420&height=420&format=png", userId)

-- SETTINGS
local stages = {"Loading Assets", "Preparing Interface", "Finalizing"}
local stageTime = 4 -- seconds per stage

-- GUI Setup
local ScreenGui = Instance.new("ScreenGui")
ScreenGui.IgnoreGuiInset = true
ScreenGui.ResetOnSpawn = false
ScreenGui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling
ScreenGui.Parent = CoreGui

-- Background (Unskippable)
local Blocker = Instance.new("Frame")
Blocker.Size = UDim2.new(1, 0, 1, 0)
Blocker.BackgroundColor3 = Color3.fromRGB(15, 15, 15)
Blocker.BorderSizePixel = 0
Blocker.Parent = ScreenGui

-- Avatar
local Avatar = Instance.new("ImageLabel")
Avatar.AnchorPoint = Vector2.new(0.5, 0.5)
Avatar.Position = UDim2.new(0.5, 0, 0.28, 0)
Avatar.Size = UDim2.new(0, 120, 0, 120)
Avatar.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
Avatar.BorderSizePixel = 0
Avatar.Image = avatarUrl
Avatar.Parent = ScreenGui

-- Username
local UserText = Instance.new("TextLabel")
UserText.AnchorPoint = Vector2.new(0.5, 0.5)
UserText.Position = UDim2.new(0.5, 0, 0.43, 0)
UserText.Size = UDim2.new(0.8, 0, 0.07, 0)
UserText.Font = Enum.Font.GothamBold
UserText.Text = "@" .. username
UserText.TextScaled = true
UserText.TextColor3 = Color3.fromRGB(255, 255, 255)
UserText.BackgroundTransparency = 1
UserText.Parent = ScreenGui

-- Loading Text
local Label = Instance.new("TextLabel")
Label.AnchorPoint = Vector2.new(0.5, 0.5)
Label.Position = UDim2.new(0.5, 0, 0.55, 0)
Label.Size = UDim2.new(0.8, 0, 0.07, 0)
Label.Font = Enum.Font.GothamSemibold
Label.Text = ""
Label.TextScaled = true
Label.TextColor3 = Color3.fromRGB(255, 255, 255)
Label.BackgroundTransparency = 1
Label.Parent = ScreenGui

-- Percentage Text
local Percent = Instance.new("TextLabel")
Percent.AnchorPoint = Vector2.new(0.5, 0.5)
Percent.Position = UDim2.new(0.5, 0, 0.64, 0)
Percent.Size = UDim2.new(0.3, 0, 0.06, 0)
Percent.Font = Enum.Font.Gotham
Percent.Text = "0%"
Percent.TextScaled = true
Percent.TextColor3 = Color3.fromRGB(0, 200, 255)
Percent.BackgroundTransparency = 1
Percent.Parent = ScreenGui

-- Loading Bar Background
local BarBG = Instance.new("Frame")
BarBG.AnchorPoint = Vector2.new(0.5, 0.5)
BarBG.Position = UDim2.new(0.5, 0, 0.72, 0)
BarBG.Size = UDim2.new(0.5, 0, 0.025, 0)
BarBG.BackgroundColor3 = Color3.fromRGB(40, 40, 60)
BarBG.BorderSizePixel = 0
BarBG.Parent = ScreenGui

-- Loading Bar Fill
local BarFill = Instance.new("Frame")
BarFill.Size = UDim2.new(0, 0, 1, 0)
BarFill.BackgroundColor3 = Color3.fromRGB(0, 200, 255)
BarFill.BorderSizePixel = 0
BarFill.Parent = BarBG

-- Tweened loading stages
local function showStage(text)
	Label.Text = text
	for i = 1, 100 do
		local progress = i / 100
		TweenService:Create(
			BarFill,
			TweenInfo.new(0.05, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
			{Size = UDim2.new(progress, 0, 1, 0)}
		):Play()
		Percent.Text = string.format("%d%%", math.floor(progress * 100))
		task.wait(stageTime / 100)
	end
end

-- Run stages
for _, stage in ipairs(stages) do
	showStage(stage)
end

-- Keep screen for 1000 seconds before fade
task.wait(1000)

TweenService:Create(Blocker, TweenInfo.new(1), {BackgroundTransparency = 1}):Play()
TweenService:Create(ScreenGui, TweenInfo.new(1), {ResetOnSpawn = true}):Play()
task.wait(1.2)
ScreenGui:Destroy()
